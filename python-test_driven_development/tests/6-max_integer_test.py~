#!/usr/bin/python3
"""Unittest for max_integer([..])
"""
import unittest
max_integer = __import__('6-max_integer').max_integer

class TestMaxInteger(unittest.TestCase):
    def test_regular_list(self):
        """Test with a regular list of integers."""
        self.assertEqual(max_integer([1, 2, 3, 4]), 4)
        self.assertEqual(max_integer([1, 3, 4, 2]), 4)

    def test_not_int(self):
        """Test with a list of non-integers and integers."""
        with self.assertRaises(TypeError):
            max_integer(['a', 'b', 9])

    def test_empty(self):
        """Test with an empty list."""
        self.assertEqual(max_integer([]), None)

    def test_negative(self):
        """Test with a list of negative values."""
        self.assertEqual(max_integer([-2, -6, -1]), -1)

    def test_float(self):
        """Test with a list of mixed float and integers."""
        self.assertEqual(max_integer([3, 4.5, 2]), 4.5)

    def test_not_list(self):
        """Test with a parameter that's not a list."""
        with self.assertRaises(TypeError):
            max_integer(7)

    def test_unique(self):
        """Test with a list of one int."""
        self.assertEqual(max_integer([45]), 45)

    def test_identical(self):
        """Test with a list of identical values."""
        self.assertEqual(max_integer([8, 8, 8]), 8)

    def test_strings(self):
        """Test with a list of strings."""
        self.assertEqual(max_integer(["hi", "hello"]), "hi")

    def test_none(self):
        """Test with a None as parameter."""
        with self.assertRaises(TypeError):
            max_integer(None)

if __name__ == '__main__':
    unittest.main()
